--- task3.py	2022-11-02 10:10:30.317376323 +0100
+++ task4.py	2022-11-02 10:42:23.012079415 +0100
@@ -6,7 +6,7 @@
 
 
 class Task(Future):
-    """Task v3"""
+    """Task v4"""
 
     def __init__(self, coroutine: Generator[Any, None, Any], name: str):
         super().__init__(name)
@@ -16,12 +16,21 @@
 
     def step(self) -> None:
         try:
-            next(self._coroutine)
+            yielded = next(self._coroutine)
         except StopIteration as e:
             self.set_result(e.value)
         else:
             # no result yet
-            self.schedule()
+            if isinstance(yielded, Future):
+                # we are blocked by some external event for example waiting for
+                # incoming data. let's wait until result is available
+                yielded.add_done_callback(self._wakeup)
+            else:
+                # just schedule again
+                self.schedule()
 
     def schedule(self) -> None:
         self._loop.schedule(self._name, self.step)
+
+    def _wakeup(self, _future: Future) -> None:
+        self.schedule()
